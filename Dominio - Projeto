;; Universidade Federal de Pernambuco
;; Disciplina: Introdução aos Agentes Inteligente
;; Alunos:  João Victor Campos Moraes
;;          Victor Gomes Cardoso
;; Professores: Ricardo Prudêncio e Flávia Barros

(define (domain logistics-typed)
  (:requirements :strips :typing) 
  (:types MACACO CAIXA BANANA LUGAR)
  (:predicates 	
		;DESCRIÇÃO DOS PREDICADOS
		; at - Apresenta a posição sujeitos/objetos (macacos, bananas e caixas) no espaço  
		; vazio - Indica que o macaco não porta nenhuma banana
		; carregado - Indica que o macaco indicado porta a banana indicada
		; no_ambiente - Significa que a banana indicada está solta no ambiente
		; baixo - O sujeito/objeto está embaixo
		; alto - O sujeito/objeto está em cima
		; livre - Não há macaco sobre a caixa em questão
		; ocupada - Há um macaco em cima da caixa
		(at ?mac ?lug)
		(vazio ?mac) 
		(carregado ?mac ?ban) 
		(no_ambiente ?ban)
		(baixo ?mac) (alto ?mac)
		(livre ?cax) (ocupada ?cax))
 
 ;; Ação IR_CAIXA >> Aplicada quando o macaco precisa ir até a caixa para pegar uma banana que está na posição "alta" 
  (:action IR_CAIXA 
	:parameters
		 (?mac - MACACO
		  ?lug1 - LUGAR
		  ?cax - CAIXA
		  ?lug2 - LUGAR
		  ?ban - BANANA)
	:precondition
		(and 	(at ?mac ?lug1) 
			(at ?cax ?lug2)
			(baixo ?mac)
			(vazio ?mac)
			(alto ?ban))
	:effect
		(and 	(at ?mac ?lug2)
			(not (at ?mac ?lug1))))

;; Ação IR_BANANA >> Aplicada quando o macaco vai até uma banana que está na posição "baixa"
  (:action IR_BANANA
	:parameters
		 (?mac - MACACO
		  ?lug1 - LUGAR
		  ?lug2 - LUGAR
		  ?ban - BANANA)
	:precondition
		(and 	(at ?mac ?lug1) 
			(at ?ban ?lug2)
			(baixo ?mac)
			(vazio ?mac)
			(baixo ?ban))
	:effect
		(and 	(at ?mac ?lug2)
			(not (at ?mac ?lug1))))

;; Ação ARRASTAR >> Aplicada quando o macaco precisa arrastar uma caixa livre para o local onde há uma banana na posição "alta"  
  (:action ARRASTAR
	:parameters
		 (?mac - MACACO
		  ?lug1 - LUGAR
		  ?cax - CAIXA
		  ?lug2 - LUGAR
		  ?ban - BANANA)
	:precondition
		(and 	(at ?mac ?lug1) 
			(at ?cax ?lug1)
			(baixo ?mac)
			(at ?ban ?lug2)
			(alto ?ban)
			(livre ?cax))
	:effect
		(and 	(at ?mac ?lug2)
			(at ?cax ?lug2)
			(not (at ?mac ?lug1))
			(not (at ?cax ?lug1))))
			
;; Ação SUBIR >> Aplicada quando o macaco precisa subir numa caixa para pegar a banana
	(:action SUBIR
	:parameters
		 (?mac - MACACO
		  ?lug1 - LUGAR
		  ?cax - CAIXA
		  ?ban - BANANA)
	:precondition
		(and 	(at ?mac ?lug1) 
			(at ?cax ?lug1)
			(baixo ?mac)
			(at ?ban ?lug1)
			(alto ?ban)
			(vazio ?mac)
			(livre ?cax))
	:effect
		(and 	(alto ?mac)
			(ocupada ?cax)
			(not (baixo ?mac))
			(not (livre ?cax))))
			
;; Ação PEGAR >> Aplicada quando o macaco está no mesmo local e altura da banana e deseja carregá-la consigo
  (:action PEGAR
	:parameters
		 (?mac - MACACO
		  ?lug1 - LUGAR
		  ?ban - BANANA)
	:precondition
		(and 	(at ?mac ?lug1) 
			(at ?ban ?lug1)
			(vazio ?mac)
			(no_ambiente ?ban)
		(or     (and (baixo ?mac) (baixo ?ban))
			(and (alto ?mac) (alto ?ban))))
	:effect
		(and 	(carregado ?mac ?ban)
			(not (vazio ?mac))
			(not (no_ambiente ?ban))))
 
;; Ação DESCER_CARREGADO >> Aplicada quando o macaco possui uma banana e precisa descer da caixa para mover-se à posição desejada 
(:action DESCER_CARREGADO
	:parameters
		 (?mac - MACACO
		  ?ban - BANANA
		  ?cax - CAIXA)
	:precondition
		(and 	(alto ?mac)
			(carregado ?mac ?ban)
			(ocupada ?cax))
	:effect
		(and 	(baixo ?mac)
			(baixo ?ban)
			(livre ?cax)
			(not (alto ?mac))
			(not (baixo ?ban))
			(not (ocupada ?cax))))

;; Ação DESCER >> Aplicada em 2 situações: quando o macaco precisa permitir que a caixa seja arrastada OU quando ele precisa mover-se, sem a banana, para outra posição
  (:action DESCER
	:parameters
		 (?mac - MACACO
		  ?cax - CAIXA)
	:precondition
		(and 	(alto ?mac)
			(vazio ?mac)
			(ocupada ?cax))
	:effect
		(and 	(baixo ?mac)
			(livre ?cax)
			(not (alto ?mac))
			(not (ocupada ?cax))))
			
;; Ação IR_CARREGADO >> Aplicada quando o macaco vai até uma posição desejada carregando a banana			
  (:action IR_CARREGADO
	:parameters
		 (?mac - MACACO
		  ?ban - BANANA
		  ?lug1 - LUGAR
		  ?lug2 - LUGAR)
	:precondition
		(and 	(carregado ?mac ?ban)
		        (baixo ?mac)
		        (at ?mac ?lug1))
	:effect
		(and 	(at ?mac ?lug2)
		        (at ?ban ?lug2)
			(not (at ?mac ?lug1))
			(not (at ?ban ?lug1))))
			
;; Ação SOLTAR >> Aplicada quando o macaco solta a banana em uma posição desejada			
  (:action SOLTAR
	:parameters
		 (?mac - MACACO
		  ?ban - BANANA)
    :precondition
		(and 	(carregado ?mac ?ban)
		        )
	:effect
		(and 	(vazio ?mac)
		        (no_ambiente ?ban)
			(not (carregado ?mac ?ban))))

	
)
